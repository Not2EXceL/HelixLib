allprojects {
    apply plugin: 'maven'
//    apply plugin: 'idea'
//    apply plugin: 'war'

    group = 'io.not2excel.helixlib'
    version = '0.1.0-SNAPSHOT'

    ext.author = 'not2excel'
    buildDir = './gradle_build'
}

subprojects {
    apply plugin: 'java'
//    apply plugin: 'groovy'
    apply plugin: 'scala'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    author = 'not2excel'

    configurations {
        provided
        compile.extendsFrom provided
    }

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            url 'https://hub.spigotmc.org/nexus/content/groups/public/'
        }
        maven {
            url 'https://oss.sonatype.org/content/groups/public/'
        }
    }

    dependencies {
        compile group: 'org.scala-lang', name: 'scala-library', version: '2.11.6'
        compile group: 'org.scala-lang', name: 'scala-reflect', version: '2.11.6'
        compile group: 'org.json', name: 'json', version: '20141113'
        compile group: 'org.clapper', name: 'grizzled-slf4j_2.11', version: '1.0.2'

        provided group: 'org.projectlombok', name: 'lombok', version: '1.14.8'
        provided group: 'org.spigotmc', name: 'spigot-api', version: '1.8.7-R0.1-SNAPSHOT'
        provided group: 'org.spigotmc', name: 'spigot', version: '1.8.7-R0.1-SNAPSHOT'
    }

    processResources {
        filter { line -> line.replace('${', '@').replace('}', '@') }
    }

    task fatJar(type: Jar) {
        baseName = project.name + '-fatjar'
        from {
            (configurations.runtime - configurations.provided).collect {
                it.isDirectory() ? it : zipTree(it)
            }
        } {
            //exclude "something to exclude"
        }
        with jar
    }
}
task migrateBuiltModule(type: Copy) {
    destinationDir = file("./out")

    into("./out") {
        project.subprojects.each { p ->
            from(p.tasks.withType(Jar).findAll {
                e -> !e.getName().equals('fatJar') || p.getName().equals('scala-loader')
            }.collect())
        }
    }
}
